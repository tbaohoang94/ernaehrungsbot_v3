{"createdAt":"2025-08-14T08:48:19.047Z","updatedAt":"2025-08-14T09:13:20.326Z","id":"fFBotPZfRL17iJEy","name":"My workflow","active":true,"isArchived":false,"nodes":[{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-2448,464],"id":"680181f7-b328-4f05-a3c0-71cc1cb65f3a","name":"Telegram Trigger","webhookId":"531fbadc-18e9-4361-944a-358c2d81a85e","notesInFlow":false,"credentials":{"telegramApi":{"id":"0a1dP8Mu8P9rrC6h","name":"Telegram account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6acafc06-ed8b-4ead-96b6-3af2b9c6f31c","leftValue":"={{ $json.message.photo }}","rightValue":"","operator":{"type":"array","operation":"exists","singleValue":true}},{"id":"3b2309a8-561b-486b-8364-dc47e156c6b2","leftValue":"={{ $json.message.document.file_name }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2224,464],"id":"eac82fb2-9816-41c4-827f-d0cd8518b85c","name":"If"},{"parameters":{"resource":"file","fileId":"={{ Array.isArray($json.message.photo) && $json.message.photo.length\n    ? $json.message.photo[$json.message.photo.length - 1].file_id\n    : ($json.message.document?.thumbnail?.file_id ?? $json.message.document?.thumb?.file_id) }}","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-1312,128],"id":"d86e385a-3906-47bf-bf13-28a9b6f75414","name":"Get a file","webhookId":"f1001731-ea68-449a-b109-06147a9cc723","credentials":{"telegramApi":{"id":"0a1dP8Mu8P9rrC6h","name":"Telegram account"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.content }}","rightValue":"open_calories","operator":{"type":"string","operation":"equals"},"id":"6123aa8f-c3f0-43fa-bcb0-30d6fc767ee3"}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"34ae90e0-8a2b-422d-a26e-223b38a39f39","leftValue":"={{ $json.message.content }}","rightValue":"sum_calories","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"ae169574-b7d8-4715-9c5b-8589f4ed037f","leftValue":"={{ $json.message.content }}","rightValue":"food_research","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b3b06832-e46e-4eec-94ca-1a0d5b9713b4","leftValue":"={{ $json.message.content }}","rightValue":"food_upload","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"60aaf647-8a02-4d93-aa3d-45143c1948eb","leftValue":"={{ $json.message.content }}","rightValue":"input_food","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-1056,576],"id":"a6da9699-660b-4865-a93e-e2f969b348ed","name":"Switch"},{"parameters":{"documentType":"image_url","options":{}},"type":"n8n-nodes-base.mistralAi","typeVersion":1,"position":[-1024,128],"id":"6d9392a9-06ec-4b7b-9309-1cd5334cc4a5","name":"Extract text","credentials":{"mistralCloudApi":{"id":"WjAKiMdho53vG0NM","name":"Mistral Cloud account"}}},{"parameters":{"promptType":"define","text":"=Du bist ein präziser Parser für Nährwerttabellen auf Lebensmitteletiketten.\nLies das mitgesendete Bild und extrahiere NUR folgende Felder als Zahlen:\n\n- Kalorien  (kcal)\n- Eiweiß     (g)\n- Kohlenhydrate (g)\n- Fett       (g)\n- Menge (integer)\n- Einheit (gram oder Stück)\n\nRegeln:\n1) Ausgabe in der Form ohne Fließtext\n2) Ziel ist immer: Werte pro 100 g bzw. pro 100 ml.\n   - Falls auf dem Etikett Werte pro 100 g oder 100 ml vorhanden sind → verwende diese.\n   - Falls KEINE 100 g-/100 ml-Angabe existiert → verwende die vorhandene Basis (z. B. pro Portion, pro Stück) und gib diese Basis genau an.\n3) Einheiten: Kalorien in kcal, Makros in Gramm (g).\n4) Dezimaltrennzeichen immer als Punkt.\n5) Falls ein Wert nicht vorhanden ist, setze ihn auf null.\n6) Füge folgende Metadaten hinzu:\n   - \"Menge\": \"100\" | \"100\"| \"unbekannt\"\n   - \"Einheit\": \"g\",\"stk\",\"ml\"\n7) Keine Schätzungen oder Hochrechnungen aus nicht expliziten Angaben.\n\n {{ $json.pages[0].markdown }}","hasOutputParser":true,"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-800,16],"id":"8db114cc-8bde-4026-84ef-9bc0d022ce2b","name":"AI Agent"},{"parameters":{"schemaType":"manual","inputSchema":"{\n    \"Kalorien\":{\"type\":\"number\"},\n    \"Eiweiß\":{\"type\":\"number\"},\n    \"Kohlenhydrate\":{\"type\":\"number\"},\n    \"Fett\":{\"type\":\"number\"},\n    \"Menge\":{\"type\":\"integer\"},\n    \"Einheit\":{\"type\":\"string\",\"enum\":[\"g\",\"stk\",\"portion\"]\n  },\n  \"required\":[\"Kalorien\",\"Eiweiß\",\"Kohlenhydrate\",\"Fett\",\"basis\",\"hinweis\"],\n  \"additionalProperties\":false\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[-656,240],"id":"abb0373a-e8db-4c12-9e6f-d8ef576f1980","name":"Structured Output Parser"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-784,240],"id":"10b2a6fe-f17c-4c13-804b-1924bdc754e9","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"rV45UCWzrapxWqF7","name":"OpenAi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"6763cd94-4830-4506-809a-87b9787d0a34","name":"output.Name","value":"={{ $('Telegram Trigger').item.json.message.caption }}","type":"string"}]},"includeOtherFields":true,"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-448,112],"id":"f69f6881-2564-4ddd-8dbe-2275d2c186f2","name":"Edit Fields"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw","mode":"list","cachedResultName":"Ernährungsplan","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1892099153,"mode":"list","cachedResultName":"Lebensmittel","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit#gid=1892099153"},"columns":{"mappingMode":"autoMapInputData","value":{"Name":"={{ $json.Name }}"},"matchingColumns":["Name"],"schema":[{"id":"Name","displayName":"Name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Kalorien","displayName":"Kalorien","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Eiweiß","displayName":"Eiweiß","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Fett","displayName":"Fett","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Kohlenhydrate","displayName":"Kohlenhydrate","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Menge","displayName":"Menge","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Einheit","displayName":"Einheit","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[0,0],"id":"585d1611-8a80-4dfe-8343-16f9f728bab2","name":"Append or update row in sheet","credentials":{"googleSheetsOAuth2Api":{"id":"5A6FIcP68hJOaLGd","name":"Google Sheets account"}}},{"parameters":{"jsCode":"return { json: $input.first().json.output };\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-224,128],"id":"49d669f1-5de4-4b5c-a71f-63f14e82a35d","name":"Code"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"GPT-4O-MINI"},"messages":{"values":[{"content":"You are a strict intent router for a nutrition bot.\nRead a single user message (may be German or English).\nReturn exactly one of the following labels (all lowercase, no quotes, no punctuation, no extra text):\n\nopen_calories\n\nsum_calories\n\nfood_research\n\ninput_food\n\nfood_upload\n\nCategory rules\nopen_calories → User asks how many calories they can still eat / calories left/remaining today.\n(DE: „wie viel darf ich noch?“, „Restkalorien“, „wie viele Kalorien übrig“)\n\nsum_calories → User asks how many calories they have already consumed today (or another date); a total/sum request.\n(DE: „wie viele Kalorien heute?“, „Summe heute“, „insgesamt gegessen“)\n\nfood_research → User asks for nutrients/macros/calories of a specific food (information lookup, not logging).\n(DE: „Nährwerte von Haferflocken“, „Wie viel Protein hat Reis?“)\n\ninput_food → User lists what they ate to log it (often lines like 150g, Haferflocken / 1 Stück, Banane; may include units g/ml/stk/portion; may be a plain narrative like “add 200 g rice”).\n\nfood_upload → User sends Macronutrients of specific food\n\nPriority (if multiple intents appear)\ninput_food (when the message includes a concrete list or add/log intent)\n\nopen_calories\n\nsum_food\n\nfood_research\n\nOutput formatting\nReturn only one label exactly as listed.\n\nNo explanations, no code blocks, no JSON.\n\nHints\nList-like patterns (commas, line breaks, amounts + units like g, ml, stk, stück, portion) → input_food.\n\nWords like remaining/left/still can eat or DE übrig/darf ich noch/rest → open_calories.\n\nWords like total/consumed today/sum or DE heute gesamt/Summe/insgesamt → sum_food.\n\nPhrases like nutrients of X, calories in X, macros for X or DE Nährwerte von X, wie viel Protein hat X → food_research.\n\nExamples\nUser: Wie viele Kalorien darf ich heute noch essen? → open_calories\nUser: Wie viele Kalorien habe ich heute konsumiert? → sum_food\nUser: Nährwerte von Haferflocken pro 100g? → food_research\nUser:\n150g, Haferflocken 200 ml, Milch 3,5% → input_food\nUser: Add 200g rice and 1 banana → input_food\nUser: Calories left today? → open_calories\nUser: How many calories did I eat today? → sum_food\nUser: Protein in 100g chicken breast? → food_research\nUser: 200 g, Reis → input_food\nUser: Ich habe 150g Reis gegessen → input_food","role":"system"},{"content":"={{ $json.message.text }}"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1424,624],"id":"698baa87-7900-4bad-a4ad-e83eb804a86f","name":"Message a model","credentials":{"openAiApi":{"id":"rV45UCWzrapxWqF7","name":"OpenAi account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw","mode":"list","cachedResultName":"Ernährungsplan","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1538482320,"mode":"list","cachedResultName":"Ziel","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit#gid=1538482320"},"filtersUI":{"values":[{"lookupColumn":"Category","lookupValue":"=Ziel"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[-528,416],"id":"d2a04bb6-7046-48a3-bfc8-21333af0ea33","name":"Get row(s) in sheet","credentials":{"googleSheetsOAuth2Api":{"id":"5A6FIcP68hJOaLGd","name":"Google Sheets account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw","mode":"list","cachedResultName":"Ernährungsplan","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1579254838,"mode":"list","cachedResultName":"Tagesbericht","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit#gid=1579254838"},"filtersUI":{"values":[{"lookupColumn":"Tag","lookupValue":"={{ new Date($now).toLocaleDateString('de-DE', {\nday: '2-digit',\nmonth: '2-digit',\nyear: 'numeric',\ntimeZone: 'Europe/Berlin'\n}) }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[-304,416],"id":"dfc0f122-8287-49e1-af83-ffbb6a650fc2","name":"Get row(s) in sheet1","credentials":{"googleSheetsOAuth2Api":{"id":"5A6FIcP68hJOaLGd","name":"Google Sheets account"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"=Daten wurden erfolgreich hinzugefügt. Für das Lebensmittel {{ $('Telegram Trigger').item.json.message.caption }} wurden folgende Werte erfasst: \nKalorien: {{ $json.Kalorien }}\nEiweiß: {{ $json['Eiweiß'] }}\nKohlenhydrate:{{ $json.Kohlenhydrate }}\nFett: {{ $json.Fett }}\nMenge: {{ $json.Menge }}\nEinheit: {{ $json.Einheit }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[0,192],"id":"95b71638-7294-4ddb-b994-06626fc41dbd","name":"Send a text message","webhookId":"a39c4d8b-736c-44ff-846c-e66a3858ecc6","credentials":{"telegramApi":{"id":"0a1dP8Mu8P9rrC6h","name":"Telegram account"}}},{"parameters":{"assignments":{"assignments":[{"id":"01b613ae-4894-4f01-8add-6743ad511148","name":"Kaloriendefizit","value":"={{ Number($('Get row(s) in sheet').item.json.Kalorienziel) - Number($json.Kalorien) }}\n","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-48,416],"id":"e09ad7dd-8fa2-4592-84bb-343c16ab91f2","name":"Edit Fields1"},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"=Du hast kannst für heute noch {{ $json.Kaloriendefizit }} zu dir nehmen.","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[208,416],"id":"c770ce9d-53a5-4c15-83f1-42f2bae32df0","name":"Send a text message1","webhookId":"385ba597-8012-4980-93b2-cbd8ca2d2576","credentials":{"telegramApi":{"id":"0a1dP8Mu8P9rrC6h","name":"Telegram account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw","mode":"list","cachedResultName":"Ernährungsplan","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1579254838,"mode":"list","cachedResultName":"Tagesbericht","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit#gid=1579254838"},"filtersUI":{"values":[{"lookupColumn":"Tag","lookupValue":"={{ new Date($now).toLocaleDateString('de-DE', { day: '2-digit', month: '2-digit', year: 'numeric', timeZone: 'Europe/Berlin' }) }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[-528,608],"id":"8795bea3-3594-482b-b0e0-9f3d7ce5fbbe","name":"Get row(s) in sheet2","credentials":{"googleSheetsOAuth2Api":{"id":"5A6FIcP68hJOaLGd","name":"Google Sheets account"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"=Du hast heute {{ $json.Kalorien }} zu dir genommen. Deine Makroverteilung sieht wiefolgt aus:\n\nKalorien: {{ $json.Kalorien }}\nEiweiß: {{ $json['Eiweiß'] }}\nFett: {{ $json.Fett }}\nKohlenhydrate: {{ $json.Kohlenhydrate }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-304,608],"id":"8da87fc1-593e-41c6-8d0a-03f7f9d8c86e","name":"Send a text message2","webhookId":"385ba597-8012-4980-93b2-cbd8ca2d2576","credentials":{"telegramApi":{"id":"0a1dP8Mu8P9rrC6h","name":"Telegram account"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"={{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[656,816],"id":"4de54765-421a-412b-b819-6f36a41ebe9e","name":"Send a text message3","webhookId":"385ba597-8012-4980-93b2-cbd8ca2d2576","credentials":{"telegramApi":{"id":"0a1dP8Mu8P9rrC6h","name":"Telegram account"}}},{"parameters":{"promptType":"define","text":"=Hier sind Daten zu Lebensmitteln und deren Nährwerten:\n\n{{ JSON.stringify($node[\"GetFood\"].json) }}\n\nBitte beantworte kurz und knapp basierend auf diesen Daten folgende Frage:\n\n{{ $('Telegram Trigger').item.json.message.text }}\n\nWenn es eine Frage zu Makronährstoffen  ist dann gebe die ausschließlich Makronährstoffe aus.\n\nWenn du keine Informationen findest, recherchie eigenständig nach den Makronährstoffen des Lebensmittels. Gebe dir Daten\nLebensmittel, Kalorien, Eiweiß, Fett, Kohlenhydrate, Menge, Einheit heraus. Erwähne auch kurz, dass diese Daten eigenständige recherchiert wurden.\n\nGebe dir Daten aus JSON aus: ","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[176,816],"id":"927dc751-0f0e-41c1-b74b-0e8a88a276e3","name":"AI Agent1"},{"parameters":{},"type":"n8n-nodes-base.limit","typeVersion":1,"position":[-320,816],"id":"913d80f1-22de-491c-8e88-9517613c3e6b","name":"Limit"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[272,1008],"id":"5e58b60f-a45d-4f4d-97c1-75735f7bc079","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"rV45UCWzrapxWqF7","name":"OpenAi account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw","mode":"list","cachedResultName":"Ernährungsplan","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1892099153,"mode":"list","cachedResultName":"Lebensmittel","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit#gid=1892099153"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[-528,816],"id":"112918f2-7dc1-46fc-8a93-4ae9a6e0afab","name":"GetFood","credentials":{"googleSheetsOAuth2Api":{"id":"5A6FIcP68hJOaLGd","name":"Google Sheets account"}}},{"parameters":{"assignments":{"assignments":[{"id":"19f84f88-5123-48d8-9c7e-716b9a6cc876","name":"Object","value":"={{ $('GetFood').item.json}}","type":"object"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-112,816],"id":"3aee971a-070d-4bcc-8d9d-d47b11badc5f","name":"Edit Fields2"},{"parameters":{"promptType":"define","text":"=Du bist ein präziser Parser für Nährwerttabellen auf Lebensmitteletiketten.\nLies das mitgesendete Bild und extrahiere NUR folgende Felder als Zahlen:\n\n- Name\n- Kalorien  (kcal)\n- Eiweiß     (g)\n- Kohlenhydrate (g)\n- Fett       (g)\n- Menge (integer)\n- Einheit (gram oder Stück)\n\nRegeln:\n1) Ausgabe in der Form ohne Fließtext\n2) Ziel ist immer: Werte pro 100 g bzw. pro 100 ml.\n   - Falls auf dem Etikett Werte pro 100 g oder 100 ml vorhanden sind → verwende diese.\n   - Falls KEINE 100 g-/100 ml-Angabe existiert → verwende die vorhandene Basis (z. B. pro Portion, pro Stück) und gib diese Basis genau an.\n3) Einheiten: Kalorien in kcal, Makros in Gramm (g).\n4) Dezimaltrennzeichen immer als Punkt.\n5) Falls ein Wert nicht vorhanden ist, setze ihn auf null.\n6) Füge folgende Metadaten hinzu:\n   - \"Menge\": \"100\" | \"100\"| \"unbekannt\"\n   - \"Einheit\": \"g\",\"stk\",\"ml\"\n7) Keine Schätzungen oder Hochrechnungen aus nicht expliziten Angaben.\n\n{{ $('Telegram Trigger').item.json.message.text }}","hasOutputParser":true,"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-448,1008],"id":"95aaa1a1-0814-4a18-b126-39b267bff457","name":"AI Agent2"},{"parameters":{"schemaType":"manual","inputSchema":"{   \"Name\":{\"type\":\"string\"},\n    \"Kalorien\":{\"type\":\"number\"},\n    \"Eiweiß\":{\"type\":\"number\"},\n    \"Kohlenhydrate\":{\"type\":\"number\"},\n    \"Fett\":{\"type\":\"number\"},\n    \"Menge\":{\"type\":\"integer\"},\n    \"Einheit\":{\"type\":\"string\",\"enum\":[\"g\",\"stk\",\"portion\"]\n  },\n  \"required\":[\"Kalorien\",\"Eiweiß\",\"Kohlenhydrate\",\"Fett\",\"basis\",\"hinweis\"],\n  \"additionalProperties\":false\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[-144,1440],"id":"a39cbde0-8103-4a71-89e1-810fd566180d","name":"Structured Output Parser1"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-272,1440],"id":"b6f2c4a3-db69-44d2-b71c-4f9b439201ae","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"rV45UCWzrapxWqF7","name":"OpenAi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"6763cd94-4830-4506-809a-87b9787d0a34","name":"output.Name","value":"={{ $json.output.Name }}","type":"string"}]},"includeOtherFields":true,"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[64,1312],"id":"809ed7af-51e9-4177-9dff-82f6fc0f92c2","name":"Edit Fields3"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw","mode":"list","cachedResultName":"Ernährungsplan","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1892099153,"mode":"list","cachedResultName":"Lebensmittel","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1EvXqaYpdNGxq5CnSwcn3v0hSBY2n8jG98ZtmfCyk5Nw/edit#gid=1892099153"},"columns":{"mappingMode":"autoMapInputData","value":{"Name":"={{ $json.Name }}"},"matchingColumns":["Name"],"schema":[{"id":"Name","displayName":"Name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Kalorien","displayName":"Kalorien","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Eiweiß","displayName":"Eiweiß","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Fett","displayName":"Fett","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Kohlenhydrate","displayName":"Kohlenhydrate","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Menge","displayName":"Menge","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Einheit","displayName":"Einheit","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[624,1216],"id":"9e8736ce-55c3-4bba-84d8-39a8f70431ca","name":"Append or update row in sheet1","credentials":{"googleSheetsOAuth2Api":{"id":"5A6FIcP68hJOaLGd","name":"Google Sheets account"}}},{"parameters":{"jsCode":"return { json: $input.first().json.output };\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[288,1328],"id":"5662f0b4-1eaf-4ee1-91f1-07371a72559b","name":"Code1"},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"=Daten wurden erfolgreich hinzugefügt. Für das Lebensmittel {{ $json.Name }} wurden folgende Werte erfasst: \nKalorien: {{ $json.Kalorien }}\nEiweiß: {{ $json['Eiweiß'] }}\nKohlenhydrate:{{ $json.Kohlenhydrate }}\nFett: {{ $json.Fett }}\nMenge: {{ $json.Menge }}\nEinheit: {{ $json.Einheit }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[624,1392],"id":"338fe145-a2b6-48b1-884c-a875f5cba976","name":"Send a text message4","webhookId":"a39c4d8b-736c-44ff-846c-e66a3858ecc6","credentials":{"telegramApi":{"id":"0a1dP8Mu8P9rrC6h","name":"Telegram account"}}}],"connections":{"Telegram Trigger":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Get a file","type":"main","index":0}],[{"node":"Message a model","type":"main","index":0}]]},"Get a file":{"main":[[{"node":"Extract text","type":"main","index":0}]]},"Extract text":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent","type":"ai_outputParser","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"AI Agent":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Append or update row in sheet","type":"main","index":0},{"node":"Send a text message","type":"main","index":0}]]},"Message a model":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Get row(s) in sheet","type":"main","index":0}],[{"node":"Get row(s) in sheet2","type":"main","index":0}],[{"node":"GetFood","type":"main","index":0}],[{"node":"AI Agent2","type":"main","index":0}]]},"Get row(s) in sheet":{"main":[[{"node":"Get row(s) in sheet1","type":"main","index":0}]]},"Get row(s) in sheet1":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"Send a text message1","type":"main","index":0}]]},"Get row(s) in sheet2":{"main":[[{"node":"Send a text message2","type":"main","index":0}]]},"AI Agent1":{"main":[[{"node":"Send a text message3","type":"main","index":0}]]},"Limit":{"main":[[{"node":"Edit Fields2","type":"main","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"GetFood":{"main":[[{"node":"Limit","type":"main","index":0}]]},"Edit Fields2":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]},"AI Agent2":{"main":[[{"node":"Edit Fields3","type":"main","index":0}]]},"Structured Output Parser1":{"ai_outputParser":[[{"node":"AI Agent2","type":"ai_outputParser","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":0}]]},"Edit Fields3":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Send a text message4","type":"main","index":0},{"node":"Append or update row in sheet1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"10c915da-692e-4ce2-b205-dede05c0b8bd","triggerCount":1,"tags":[]}